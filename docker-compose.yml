volumes:
  db_postgres_vol:
  db_mongo_vol:
  cache_redis_vol:

networks:
  startup-stack-network:
    driver: bridge

services:
  nginx:
    platform: linux/amd64 #Required for Mac M1 PRO
    container_name: nginx
    build:
      context: .
      dockerfile: nginx/nginx.Dockerfile
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    networks:
      - startup-stack-network
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt
      - ./nginx/public:/usr/share/nginx/html
      - ./nginx/sites-available:/home/sites-available

  backup:
    platform: linux/amd64 #Required for Mac M1 PRO
    container_name: backup
    build:
      context: .
      dockerfile: backup/backup.Dockerfile
      args:
        - PORT=3000
    ports:
      - "3000:3000"
    environment:
      - FIREBASE_PRIVATE_KEY_FILE=${FIREBASE_PRIVATE_KEY_FILE:-firebase-private-key.json}
      - FIREBASE_PROJECT_ID=${FIREBASE_PROJECT_ID:-startup-stack}
      - FIREBASE_STORAGE_BUCKET=${FIREBASE_STORAGE_BUCKET:-gs://startup-stack.appspot.com}
      - FIREBASE_UPLOAD_BACKUPS_LIMIT=${FIREBASE_UPLOAD_BACKUPS_LIMIT:-2} # number of backups to upload to firebase storage
      - POSTGRES_PORT_USER_DBNAME_CONTAINER_1=${POSTGRES_PORT_USER_DBNAME_CONTAINER_1}  # you can add multiple databases, just add _1, _2, _3, etc.
      - POSTGRES_PORT_USER_DBNAME_CONTAINER_2=${POSTGRES_PORT_USER_DBNAME_CONTAINER_2}  # you can add multiple databases, just add _1, _2, _3, etc.
      #- POSTGRES_PORT_USER_DBNAME_CONTAINER_2=${POSTGRES_PORT},${POSTGRES_USER},${POSTGRES_DB_NAME},${POSTGRES_DB_DOCKER_CONTAINER_NAME}
      - CRON_BACKUP_SCHEDULE=${CRON_BACKUP_SCHEDULE:-0 4 * * *}  # every day at 4am
      - LOCAL_BACKUPS_LIMIT=${LOCAL_BACKUPS_LIMIT:-2} # number of backups to keep per database
    networks:
      - startup-stack-network
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./backup/backups:/home/backups
      - ./backup/private:/home/private

#  db_postgres:
#    container_name: db_postgres
#    image: postgres:16.1
#    shm_size: 2g
#    restart: always
#    environment:
#      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
#      - POSTGRES_USER=${POSTGRES_USER}
#      - POSTGRES_DB=example_db
#    command:
#      - "postgres"
#      - "-c"
#      - "wal_level=logical"              # required for logical replication and CDC Debezium
#      - "-c"
#      - "max_prepared_transactions=100"  # required for 2-phase commit (2PC) transactions
#      # configs below taken from https://pgtune.leopard.in.ua/#/ for: 2GB RAM, SSD
#      - "-c"
#      - "max_connections=300"
#      - "-c"
#      - "shared_buffers=512MB"
#      - "-c"
#      - "effective_cache_size=1536MB"
#      - "-c"
#      - "maintenance_work_mem=128MB"
#      - "-c"
#      - "checkpoint_completion_target=0.9"
#      - "-c"
#      - "wal_buffers=16MB"
#      - "-c"
#      - "default_statistics_target=100"
#      - "-c"
#      - "random_page_cost=1.1"
#      - "-c"
#      - "effective_io_concurrency=200"
#      - "-c"
#      - "work_mem=873kB"
#      - "-c"
#      - "huge_pages=off"
#      - "-c"
#      - "min_wal_size=2GB"
#      - "-c"
#      - "max_wal_size=8GB"
#    volumes:
#      - db_postgres_vol:/var/lib/postgresql/data
#    ports:
#      - ${POSTGRES_PORT:-5432}:5432
#    networks:
#      - startup-stack-network

#  cache_redis:
#    image: redis:7.4.0
#    restart: always
#    ports:
#      - ${REDIS_PORT}:${REDIS_PORT}
#    command: redis-server --maxmemory-policy allkeys-lfu --maxmemory 256M --save 3600 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
#    volumes:
#      - cache_redis_vol:/data
#    networks:
#      - startup-stack-network

#  db_mongo:
#    container_name: db_mongo
#    image: mongo:7.0.14
#    restart: always
#    environment:
#      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME}
#      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
#    volumes:
#      - db_mongo_vol:/data/db
#    ports:
#      - ${MONGO_PORT:-27017}:27017
#    networks:
#      - startup-stack-network
